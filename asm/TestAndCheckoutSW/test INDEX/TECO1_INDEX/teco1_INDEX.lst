Block I Apollo Guidance Computer (AGC4) assembler version 1.6

First pass: generate symbol table.
Second pass: generate object code.

                          ; TECO1_INDEX (file:teco1_INDEX.asm)
                          ; 
                          ; Version:	1.0
                          ; Author:	John Pultorak
                          ; Date:		9/14/2001
                          ; 
                          ; PURPOSE:
                          ; Test and checkout program for the Block 1 Apollo Guidance Computer.
                          ; Tests basic instructions: INDEX.
                          ; 
                          ; OPERATION:
                          ; Enters an infinite loop at the end of the test. The A register contains 
                          ; the code for the test that failed, or the PASS code if all tests 
                          ; succeeded. See test codes below.
                          ; 
                          ; ERRATA:
                          ; - Written for the AGC4R assembler. The assembler directives and syntax
                          ; differ somewhat from the original AGC assembler.
                          ; - The tests attempt to check all threads, but are not exhaustive.
                          ; 
                          ; SOURCES:
                          ; Information on the Block 1 architecture: instruction set, instruction
                          ; sequences, registers, register transfers, control pulses, memory and 
                          ; memory addressing, I/O assignments, interrupts, and involuntary counters
                          ; was obtained from:
                          ; 
                          ;	A. Hopkins, R. Alonso, and H. Blair-Smith, "Logical Description 
                          ;		for the Apollo Guidance Computer (AGC4)", R-393, 
                          ;		MIT Instrumentation Laboratory, Cambridge, MA, Mar. 1963.
                          ; 
                          ; Supplementary information was obtained from:
                          ; 
                          ;	R. Alonso, J. H. Laning, Jr. and H. Blair-Smith, "Preliminary 
                          ;		MOD 3C Programmer's Manual", E-1077, MIT Instrumentation 
                          ;		Laboratory, Cambridge, MA, Nov. 1961.
                          ; 
                          ;	B. I. Savage and A. Drake, "AGC4 Basic Training Manual, Volume I", 
                          ;		E-2052, MIT Instrumentation Laboratory, Cambridge, 
                          ;		MA, Jan. 1967.
                          ; 
                          ;	E. C. Hall, "MIT's Role in Project Apollo, Volume III, Computer 
                          ;		Subsystem", R-700, MIT Charles Stark Draper Laboratory, 
                          ;		Cambridge, MA, Aug. 1972.
                          ; 
                          ;	A. Hopkins, "Guidance Computer Design, Part VI", source unknown.
                          ; 
                          ;	A. I. Green and J. J. Rocchio, "Keyboard and Display System Program 
                          ;		for AGC (Program Sunrise)", E-1574, MIT Instrumentation 
                          ;		Laboratory, Cambridge, MA, Aug. 1964.
                          ; 
                          ;	E, C. Hall, "Journey to the Moon: The History of the Apollo 
                          ;		Guidance Computer", AIAA, Reston VA, 1996.
                          ; 
                          
                          START          EQU      %00            
                          
                          INDEXtst       EQU      %03            ; INDEX check failed
                          
                          PASS           EQU      %12345         ; PASSED all checks
                          ; ----------------------------------------------
                          
                          OVFCNTR        EQU      %00034         ; overflow counter
                          
                          ; ----------------------------------------------
                          ; ERASEABLE MEMORY -- DATA SEGMENT
                          
                                         ORG      %100           ; start of data area
00100    0100     00000 1 curtest        DS       START          ; current test
00101    0101     00000 1 savQ           DS       %0             
                          
                          ; INDEX test
00102    0102     00000 1 INDXval        DS       0              
                          
                          ; ----------------------------------------------
                          ; ENTRY POINTS
                          
                          ; program (re)start
                                         ORG      GOPROG         
02000    2000 0  1,2001 1                TC       goMAIN         
                          
                          ; ----------------------------------------------
                          ; FIXED MEMORY -- SHARED DATA SEGMENT
                          
                          ; ----------------------------------------------
                          ; MAIN PROGRAM
                          
                          goMAIN         EQU      *              
02001    2001 2  0,0000 0                INHINT                  ; disable interrupts
                          
02002    2002 0  1,2011 0                TCR      begin          
                          
                          ; Test basic instructions.
02003    2003 0  1,2024 0                TCR      chkINDEX       
                          
                          ; Passed all tests.
02004    2004 0  1,2050 0                TCR      finish         
                          
                          fail           EQU      *              
02005    2005 3  0,0100 0                XCH      curtest        ; load last passed test into A
02006    2006 5  0,0100 0                TS       curtest        
                          
                          end            EQU      *              
02007    2007 0  1,2007 1                TC       end            ; finished, TC trap
                          
                          ; ----------------------------------------------
                          ; INITIALIZE FOR START OF TESTING
                          
02010    2010     00000 1 STRTcode       DS       START          
                          
                          begin          EQU      *              
02011    2011 3  1,2010 1                XCH      STRTcode       
02012    2012 5  0,0100 0                TS       curtest        ; set current test code to START
02013    2013 0  0,0000 0                RETURN                  
                          
                          ; ----------------------------------------------
                          ; TEST INDEX INSTRUCTION SUBROUTINE
                          ; L:	INDEX	K	(where K != 0025)
                          ; Verifies the following;
                          ; - Use the sum of C(L+1) + C(K) as the next instruction
                          ; -- just as if that sum had been taken from L+1.
                          
02014    2014     00003 1 INDXcode       DS       INDEXtst       ; code for this test
02015    2015     00005 1 INDXst         DS       5              ; somewhere in fixed memory
                          
02016    2016     00000 1 INDXbas        DS       0              ; base address for indexing
02017    2017     00001 0                DS       1              
02020    2020     00002 0                DS       2              
02021    2021     00003 1                DS       3              
02022    2022     00004 0                DS       4              
02023    2023     00005 1                DS       5              
                          
                          chkINDEX       EQU      *              
02024    2024 3  0,0001 0                XCH      Q              
02025    2025 5  0,0101 1                TS       savQ           ; save return address
                          
02026    2026 3  1,2014 0                CAF      INDXcode       
02027    2027 5  0,0100 0                TS       curtest        ; set current test code to this test
                          
                          ; Decrementing loop
                          ;	- always executes at least once (tests at end of loop)
                          ;	- loops 'INDXst+1' times; decrements INDXval
                          
02030    2030 3  1,2015 1                XCH      INDXst         ; initialize loop counter
                          
                          INDXlop        EQU      *              
02031    2031 5  0,0102 1                TS       INDXval        
                          
                          ; perform indexed CAF of values in INDXbas array;
                          ; index values range from 5 to 0
02032    2032 2  0,0102 0                INDEX    INDXval        
02033    2033 3  1,2016 1                CAF      INDXbas        
                          
                          ; verify value retrieved using INDEX matches expected value
02034    2034 4  0,0000 0                COM                     ; get -A
02035    2035 6  0,0102 1                AD       INDXval        ; put (-A) + expected value in A
02036    2036 1  0,0000 0                CCS      A              ; compare
02037    2037 0  1,2005 0                TC       fail           ; >0 (A < expected value)
02040    2040 0  1,2005 0                TC       fail           ; +0
02041    2041 0  1,2005 0                TC       fail           ; <0 (A > expected value)
                          
02042    2042 1  0,0102 0                CCS      INDXval        ; done?
02043    2043 0  1,2031 1                TC       INDXlop        ; not yet
                          
02044    2044 3  0,0101 1                XCH      savQ           
02045    2045 5  0,0001 0                TS       Q              ; restore return address
02046    2046 0  0,0000 0                RETURN                  
                          ; ----------------------------------------------
                          ; PASSED ALL TESTS!
                          
02047    2047     12345 0 PASScode       DS       PASS           
                          
                          finish         EQU      *              
02050    2050 3  1,2047 0                CAF      PASScode       
02051    2051 5  0,0100 0                TS       curtest        ; set current test code to PASS
02052    2052 0  0,0000 0                RETURN                  
                          
                          ; ----------------------------------------------

Assembly complete. Errors = 0

Symbol table:
START          000000   INDEXtst       000003   PASS           012345   
OVFCNTR        000034   curtest        000100   savQ           000101   
INDXval        000102   GOPROG         002000   goMAIN         002001   
fail           002005   end            002007   STRTcode       002010   
begin          002011   INDXcode       002014   INDXst         002015   
INDXbas        002016   chkINDEX       002024   INDXlop        002031   
PASScode       002047   finish         002050   Q              000001   
A              000000   